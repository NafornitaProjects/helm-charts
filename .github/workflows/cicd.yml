name: Helm Chart Templates CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Validate Helm Charts
        run: |
          for chart in $(find . -name Chart.yaml -exec dirname {} \;); do
            echo "Validating chart in $chart"
            helm lint $chart
            helm template $chart > /dev/null
          done

      - name: Upload Repository as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: helm-charts-repo
          path: .  # Ensure all necessary files are included
          retention-days: 1

  package:
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Download Repository Artifact
        uses: actions/download-artifact@v3
        with:
          name: helm-charts-repo

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Reinitialize Git
        run: |
            git init
            git remote add origin https://github.com/${{ github.repository }}
            git fetch --unshallow
            git checkout $(git rev-parse HEAD)

      - name: Configure Git User
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Set Execute Permission for Scripts
        run: chmod +x ./scripts/bump_version.sh

      - name: Bump Helm Chart Versions
        run: |
          for chart in $(find . -name Chart.yaml -exec dirname {} \;); do
            echo "Bumping version for $chart"
            ./scripts/bump_version.sh $chart auto
          done

      - name: Package Helm Charts
        run: |
          mkdir -p packaged
          for chart in $(find . -name Chart.yaml -exec dirname {} \;); do
            echo "Packaging chart in $chart"
            helm package $chart --destination packaged/
          done

      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ github.run_number }}"
          release_name: "Helm Charts Release v${{ github.run_number }}"
          draft: false
          prerelease: false

      - name: Upload Helm Chart Packages to GitHub Release
        if: github.ref == 'refs/heads/main'
        run: |
          for chart in ./packaged/*.tgz; do
            name=$(basename "$chart")
            echo "Uploading $name"
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/gzip" \
              --data-binary @"$chart" \
              ${{ steps.create_release.outputs.upload_url }}?name=$name
          done
